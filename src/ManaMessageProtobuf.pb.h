// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ManaMessageProtobuf.proto

#ifndef PROTOBUF_ManaMessageProtobuf_2eproto__INCLUDED
#define PROTOBUF_ManaMessageProtobuf_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace mana {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ManaMessageProtobuf_2eproto();
void protobuf_AssignDesc_ManaMessageProtobuf_2eproto();
void protobuf_ShutdownFile_ManaMessageProtobuf_2eproto();

class ManaMessageProtobuf;
class ManaMessageProtobuf_value_t;
class ManaMessageProtobuf_subscription_t;
class ManaMessageProtobuf_subscription_t_constraint_t;
class ManaMessageProtobuf_notification_t;
class ManaMessageProtobuf_notification_t_attribute_t;
class ManaMessageProtobuf_key_value_pair;

enum ManaMessageProtobuf_subscription_t_operator_t {
  ManaMessageProtobuf_subscription_t_operator_t_EQUAL = 1,
  ManaMessageProtobuf_subscription_t_operator_t_LESS_THAN = 2,
  ManaMessageProtobuf_subscription_t_operator_t_GREATER_THAN = 3,
  ManaMessageProtobuf_subscription_t_operator_t_SUFFIX = 4,
  ManaMessageProtobuf_subscription_t_operator_t_PREFIX = 5,
  ManaMessageProtobuf_subscription_t_operator_t_SUB_STRING = 6,
  ManaMessageProtobuf_subscription_t_operator_t_ANY = 7,
  ManaMessageProtobuf_subscription_t_operator_t_NOT_EQUAL = 8,
  ManaMessageProtobuf_subscription_t_operator_t_REGULAR_EXP = 9
};
bool ManaMessageProtobuf_subscription_t_operator_t_IsValid(int value);
const ManaMessageProtobuf_subscription_t_operator_t ManaMessageProtobuf_subscription_t_operator_t_operator_t_MIN = ManaMessageProtobuf_subscription_t_operator_t_EQUAL;
const ManaMessageProtobuf_subscription_t_operator_t ManaMessageProtobuf_subscription_t_operator_t_operator_t_MAX = ManaMessageProtobuf_subscription_t_operator_t_REGULAR_EXP;
const int ManaMessageProtobuf_subscription_t_operator_t_operator_t_ARRAYSIZE = ManaMessageProtobuf_subscription_t_operator_t_operator_t_MAX + 1;

const ::google::protobuf::EnumDescriptor* ManaMessageProtobuf_subscription_t_operator_t_descriptor();
inline const ::std::string& ManaMessageProtobuf_subscription_t_operator_t_Name(ManaMessageProtobuf_subscription_t_operator_t value) {
  return ::google::protobuf::internal::NameOfEnum(
    ManaMessageProtobuf_subscription_t_operator_t_descriptor(), value);
}
inline bool ManaMessageProtobuf_subscription_t_operator_t_Parse(
    const ::std::string& name, ManaMessageProtobuf_subscription_t_operator_t* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ManaMessageProtobuf_subscription_t_operator_t>(
    ManaMessageProtobuf_subscription_t_operator_t_descriptor(), name, value);
}
enum ManaMessageProtobuf_message_type_t {
  ManaMessageProtobuf_message_type_t_START_SESSION = 1,
  ManaMessageProtobuf_message_type_t_START_SESSION_ACK = 2,
  ManaMessageProtobuf_message_type_t_START_SESSION_ACK_ACK = 3,
  ManaMessageProtobuf_message_type_t_TERMINATE_SESSION = 4,
  ManaMessageProtobuf_message_type_t_TERMINATE_SESSION_ACK = 5,
  ManaMessageProtobuf_message_type_t_ACK = 6,
  ManaMessageProtobuf_message_type_t_HEARTBEAT = 7,
  ManaMessageProtobuf_message_type_t_SUB = 101,
  ManaMessageProtobuf_message_type_t_NOT = 102,
  ManaMessageProtobuf_message_type_t_UNSUB = 130,
  ManaMessageProtobuf_message_type_t_ERR_NOT_SUPPORTED = 201
};
bool ManaMessageProtobuf_message_type_t_IsValid(int value);
const ManaMessageProtobuf_message_type_t ManaMessageProtobuf_message_type_t_message_type_t_MIN = ManaMessageProtobuf_message_type_t_START_SESSION;
const ManaMessageProtobuf_message_type_t ManaMessageProtobuf_message_type_t_message_type_t_MAX = ManaMessageProtobuf_message_type_t_ERR_NOT_SUPPORTED;
const int ManaMessageProtobuf_message_type_t_message_type_t_ARRAYSIZE = ManaMessageProtobuf_message_type_t_message_type_t_MAX + 1;

const ::google::protobuf::EnumDescriptor* ManaMessageProtobuf_message_type_t_descriptor();
inline const ::std::string& ManaMessageProtobuf_message_type_t_Name(ManaMessageProtobuf_message_type_t value) {
  return ::google::protobuf::internal::NameOfEnum(
    ManaMessageProtobuf_message_type_t_descriptor(), value);
}
inline bool ManaMessageProtobuf_message_type_t_Parse(
    const ::std::string& name, ManaMessageProtobuf_message_type_t* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ManaMessageProtobuf_message_type_t>(
    ManaMessageProtobuf_message_type_t_descriptor(), name, value);
}
enum ManaMessageProtobuf_tag_type_t {
  ManaMessageProtobuf_tag_type_t_STRING = 1,
  ManaMessageProtobuf_tag_type_t_INT = 2,
  ManaMessageProtobuf_tag_type_t_DOUBLE = 3,
  ManaMessageProtobuf_tag_type_t_BOOL = 4,
  ManaMessageProtobuf_tag_type_t_ANY_TYPE = 5
};
bool ManaMessageProtobuf_tag_type_t_IsValid(int value);
const ManaMessageProtobuf_tag_type_t ManaMessageProtobuf_tag_type_t_tag_type_t_MIN = ManaMessageProtobuf_tag_type_t_STRING;
const ManaMessageProtobuf_tag_type_t ManaMessageProtobuf_tag_type_t_tag_type_t_MAX = ManaMessageProtobuf_tag_type_t_ANY_TYPE;
const int ManaMessageProtobuf_tag_type_t_tag_type_t_ARRAYSIZE = ManaMessageProtobuf_tag_type_t_tag_type_t_MAX + 1;

const ::google::protobuf::EnumDescriptor* ManaMessageProtobuf_tag_type_t_descriptor();
inline const ::std::string& ManaMessageProtobuf_tag_type_t_Name(ManaMessageProtobuf_tag_type_t value) {
  return ::google::protobuf::internal::NameOfEnum(
    ManaMessageProtobuf_tag_type_t_descriptor(), value);
}
inline bool ManaMessageProtobuf_tag_type_t_Parse(
    const ::std::string& name, ManaMessageProtobuf_tag_type_t* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ManaMessageProtobuf_tag_type_t>(
    ManaMessageProtobuf_tag_type_t_descriptor(), name, value);
}
// ===================================================================

class ManaMessageProtobuf_value_t : public ::google::protobuf::Message {
 public:
  ManaMessageProtobuf_value_t();
  virtual ~ManaMessageProtobuf_value_t();
  
  ManaMessageProtobuf_value_t(const ManaMessageProtobuf_value_t& from);
  
  inline ManaMessageProtobuf_value_t& operator=(const ManaMessageProtobuf_value_t& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ManaMessageProtobuf_value_t& default_instance();
  
  void Swap(ManaMessageProtobuf_value_t* other);
  
  // implements Message ----------------------------------------------
  
  ManaMessageProtobuf_value_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ManaMessageProtobuf_value_t& from);
  void MergeFrom(const ManaMessageProtobuf_value_t& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .mana.ManaMessageProtobuf.tag_type_t type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::mana::ManaMessageProtobuf_tag_type_t type() const;
  inline void set_type(::mana::ManaMessageProtobuf_tag_type_t value);
  
  // optional string string_value = 2;
  inline bool has_string_value() const;
  inline void clear_string_value();
  static const int kStringValueFieldNumber = 2;
  inline const ::std::string& string_value() const;
  inline void set_string_value(const ::std::string& value);
  inline void set_string_value(const char* value);
  inline void set_string_value(const char* value, size_t size);
  inline ::std::string* mutable_string_value();
  inline ::std::string* release_string_value();
  
  // optional int32 int_value = 3;
  inline bool has_int_value() const;
  inline void clear_int_value();
  static const int kIntValueFieldNumber = 3;
  inline ::google::protobuf::int32 int_value() const;
  inline void set_int_value(::google::protobuf::int32 value);
  
  // optional double double_value = 4;
  inline bool has_double_value() const;
  inline void clear_double_value();
  static const int kDoubleValueFieldNumber = 4;
  inline double double_value() const;
  inline void set_double_value(double value);
  
  // optional bool bool_value = 5;
  inline bool has_bool_value() const;
  inline void clear_bool_value();
  static const int kBoolValueFieldNumber = 5;
  inline bool bool_value() const;
  inline void set_bool_value(bool value);
  
  // @@protoc_insertion_point(class_scope:mana.ManaMessageProtobuf.value_t)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_string_value();
  inline void clear_has_string_value();
  inline void set_has_int_value();
  inline void clear_has_int_value();
  inline void set_has_double_value();
  inline void clear_has_double_value();
  inline void set_has_bool_value();
  inline void clear_has_bool_value();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* string_value_;
  int type_;
  ::google::protobuf::int32 int_value_;
  double double_value_;
  bool bool_value_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_ManaMessageProtobuf_2eproto();
  friend void protobuf_AssignDesc_ManaMessageProtobuf_2eproto();
  friend void protobuf_ShutdownFile_ManaMessageProtobuf_2eproto();
  
  void InitAsDefaultInstance();
  static ManaMessageProtobuf_value_t* default_instance_;
};
// -------------------------------------------------------------------

class ManaMessageProtobuf_subscription_t_constraint_t : public ::google::protobuf::Message {
 public:
  ManaMessageProtobuf_subscription_t_constraint_t();
  virtual ~ManaMessageProtobuf_subscription_t_constraint_t();
  
  ManaMessageProtobuf_subscription_t_constraint_t(const ManaMessageProtobuf_subscription_t_constraint_t& from);
  
  inline ManaMessageProtobuf_subscription_t_constraint_t& operator=(const ManaMessageProtobuf_subscription_t_constraint_t& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ManaMessageProtobuf_subscription_t_constraint_t& default_instance();
  
  void Swap(ManaMessageProtobuf_subscription_t_constraint_t* other);
  
  // implements Message ----------------------------------------------
  
  ManaMessageProtobuf_subscription_t_constraint_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ManaMessageProtobuf_subscription_t_constraint_t& from);
  void MergeFrom(const ManaMessageProtobuf_subscription_t_constraint_t& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // required .mana.ManaMessageProtobuf.subscription_t.operator_t op = 2;
  inline bool has_op() const;
  inline void clear_op();
  static const int kOpFieldNumber = 2;
  inline ::mana::ManaMessageProtobuf_subscription_t_operator_t op() const;
  inline void set_op(::mana::ManaMessageProtobuf_subscription_t_operator_t value);
  
  // required .mana.ManaMessageProtobuf.value_t value = 3;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 3;
  inline const ::mana::ManaMessageProtobuf_value_t& value() const;
  inline ::mana::ManaMessageProtobuf_value_t* mutable_value();
  inline ::mana::ManaMessageProtobuf_value_t* release_value();
  
  // @@protoc_insertion_point(class_scope:mana.ManaMessageProtobuf.subscription_t.constraint_t)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_op();
  inline void clear_has_op();
  inline void set_has_value();
  inline void clear_has_value();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* name_;
  ::mana::ManaMessageProtobuf_value_t* value_;
  int op_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_ManaMessageProtobuf_2eproto();
  friend void protobuf_AssignDesc_ManaMessageProtobuf_2eproto();
  friend void protobuf_ShutdownFile_ManaMessageProtobuf_2eproto();
  
  void InitAsDefaultInstance();
  static ManaMessageProtobuf_subscription_t_constraint_t* default_instance_;
};
// -------------------------------------------------------------------

class ManaMessageProtobuf_subscription_t : public ::google::protobuf::Message {
 public:
  ManaMessageProtobuf_subscription_t();
  virtual ~ManaMessageProtobuf_subscription_t();
  
  ManaMessageProtobuf_subscription_t(const ManaMessageProtobuf_subscription_t& from);
  
  inline ManaMessageProtobuf_subscription_t& operator=(const ManaMessageProtobuf_subscription_t& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ManaMessageProtobuf_subscription_t& default_instance();
  
  void Swap(ManaMessageProtobuf_subscription_t* other);
  
  // implements Message ----------------------------------------------
  
  ManaMessageProtobuf_subscription_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ManaMessageProtobuf_subscription_t& from);
  void MergeFrom(const ManaMessageProtobuf_subscription_t& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef ManaMessageProtobuf_subscription_t_constraint_t constraint_t;
  
  typedef ManaMessageProtobuf_subscription_t_operator_t operator_t;
  static const operator_t EQUAL = ManaMessageProtobuf_subscription_t_operator_t_EQUAL;
  static const operator_t LESS_THAN = ManaMessageProtobuf_subscription_t_operator_t_LESS_THAN;
  static const operator_t GREATER_THAN = ManaMessageProtobuf_subscription_t_operator_t_GREATER_THAN;
  static const operator_t SUFFIX = ManaMessageProtobuf_subscription_t_operator_t_SUFFIX;
  static const operator_t PREFIX = ManaMessageProtobuf_subscription_t_operator_t_PREFIX;
  static const operator_t SUB_STRING = ManaMessageProtobuf_subscription_t_operator_t_SUB_STRING;
  static const operator_t ANY = ManaMessageProtobuf_subscription_t_operator_t_ANY;
  static const operator_t NOT_EQUAL = ManaMessageProtobuf_subscription_t_operator_t_NOT_EQUAL;
  static const operator_t REGULAR_EXP = ManaMessageProtobuf_subscription_t_operator_t_REGULAR_EXP;
  static inline bool operator_t_IsValid(int value) {
    return ManaMessageProtobuf_subscription_t_operator_t_IsValid(value);
  }
  static const operator_t operator_t_MIN =
    ManaMessageProtobuf_subscription_t_operator_t_operator_t_MIN;
  static const operator_t operator_t_MAX =
    ManaMessageProtobuf_subscription_t_operator_t_operator_t_MAX;
  static const int operator_t_ARRAYSIZE =
    ManaMessageProtobuf_subscription_t_operator_t_operator_t_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  operator_t_descriptor() {
    return ManaMessageProtobuf_subscription_t_operator_t_descriptor();
  }
  static inline const ::std::string& operator_t_Name(operator_t value) {
    return ManaMessageProtobuf_subscription_t_operator_t_Name(value);
  }
  static inline bool operator_t_Parse(const ::std::string& name,
      operator_t* value) {
    return ManaMessageProtobuf_subscription_t_operator_t_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // repeated .mana.ManaMessageProtobuf.subscription_t.constraint_t constraints = 1;
  inline int constraints_size() const;
  inline void clear_constraints();
  static const int kConstraintsFieldNumber = 1;
  inline const ::mana::ManaMessageProtobuf_subscription_t_constraint_t& constraints(int index) const;
  inline ::mana::ManaMessageProtobuf_subscription_t_constraint_t* mutable_constraints(int index);
  inline ::mana::ManaMessageProtobuf_subscription_t_constraint_t* add_constraints();
  inline const ::google::protobuf::RepeatedPtrField< ::mana::ManaMessageProtobuf_subscription_t_constraint_t >&
      constraints() const;
  inline ::google::protobuf::RepeatedPtrField< ::mana::ManaMessageProtobuf_subscription_t_constraint_t >*
      mutable_constraints();
  
  // @@protoc_insertion_point(class_scope:mana.ManaMessageProtobuf.subscription_t)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::mana::ManaMessageProtobuf_subscription_t_constraint_t > constraints_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_ManaMessageProtobuf_2eproto();
  friend void protobuf_AssignDesc_ManaMessageProtobuf_2eproto();
  friend void protobuf_ShutdownFile_ManaMessageProtobuf_2eproto();
  
  void InitAsDefaultInstance();
  static ManaMessageProtobuf_subscription_t* default_instance_;
};
// -------------------------------------------------------------------

class ManaMessageProtobuf_notification_t_attribute_t : public ::google::protobuf::Message {
 public:
  ManaMessageProtobuf_notification_t_attribute_t();
  virtual ~ManaMessageProtobuf_notification_t_attribute_t();
  
  ManaMessageProtobuf_notification_t_attribute_t(const ManaMessageProtobuf_notification_t_attribute_t& from);
  
  inline ManaMessageProtobuf_notification_t_attribute_t& operator=(const ManaMessageProtobuf_notification_t_attribute_t& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ManaMessageProtobuf_notification_t_attribute_t& default_instance();
  
  void Swap(ManaMessageProtobuf_notification_t_attribute_t* other);
  
  // implements Message ----------------------------------------------
  
  ManaMessageProtobuf_notification_t_attribute_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ManaMessageProtobuf_notification_t_attribute_t& from);
  void MergeFrom(const ManaMessageProtobuf_notification_t_attribute_t& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // required .mana.ManaMessageProtobuf.value_t value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline const ::mana::ManaMessageProtobuf_value_t& value() const;
  inline ::mana::ManaMessageProtobuf_value_t* mutable_value();
  inline ::mana::ManaMessageProtobuf_value_t* release_value();
  
  // @@protoc_insertion_point(class_scope:mana.ManaMessageProtobuf.notification_t.attribute_t)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_value();
  inline void clear_has_value();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* name_;
  ::mana::ManaMessageProtobuf_value_t* value_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_ManaMessageProtobuf_2eproto();
  friend void protobuf_AssignDesc_ManaMessageProtobuf_2eproto();
  friend void protobuf_ShutdownFile_ManaMessageProtobuf_2eproto();
  
  void InitAsDefaultInstance();
  static ManaMessageProtobuf_notification_t_attribute_t* default_instance_;
};
// -------------------------------------------------------------------

class ManaMessageProtobuf_notification_t : public ::google::protobuf::Message {
 public:
  ManaMessageProtobuf_notification_t();
  virtual ~ManaMessageProtobuf_notification_t();
  
  ManaMessageProtobuf_notification_t(const ManaMessageProtobuf_notification_t& from);
  
  inline ManaMessageProtobuf_notification_t& operator=(const ManaMessageProtobuf_notification_t& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ManaMessageProtobuf_notification_t& default_instance();
  
  void Swap(ManaMessageProtobuf_notification_t* other);
  
  // implements Message ----------------------------------------------
  
  ManaMessageProtobuf_notification_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ManaMessageProtobuf_notification_t& from);
  void MergeFrom(const ManaMessageProtobuf_notification_t& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef ManaMessageProtobuf_notification_t_attribute_t attribute_t;
  
  // accessors -------------------------------------------------------
  
  // repeated .mana.ManaMessageProtobuf.notification_t.attribute_t attribute = 1;
  inline int attribute_size() const;
  inline void clear_attribute();
  static const int kAttributeFieldNumber = 1;
  inline const ::mana::ManaMessageProtobuf_notification_t_attribute_t& attribute(int index) const;
  inline ::mana::ManaMessageProtobuf_notification_t_attribute_t* mutable_attribute(int index);
  inline ::mana::ManaMessageProtobuf_notification_t_attribute_t* add_attribute();
  inline const ::google::protobuf::RepeatedPtrField< ::mana::ManaMessageProtobuf_notification_t_attribute_t >&
      attribute() const;
  inline ::google::protobuf::RepeatedPtrField< ::mana::ManaMessageProtobuf_notification_t_attribute_t >*
      mutable_attribute();
  
  // @@protoc_insertion_point(class_scope:mana.ManaMessageProtobuf.notification_t)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::mana::ManaMessageProtobuf_notification_t_attribute_t > attribute_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_ManaMessageProtobuf_2eproto();
  friend void protobuf_AssignDesc_ManaMessageProtobuf_2eproto();
  friend void protobuf_ShutdownFile_ManaMessageProtobuf_2eproto();
  
  void InitAsDefaultInstance();
  static ManaMessageProtobuf_notification_t* default_instance_;
};
// -------------------------------------------------------------------

class ManaMessageProtobuf_key_value_pair : public ::google::protobuf::Message {
 public:
  ManaMessageProtobuf_key_value_pair();
  virtual ~ManaMessageProtobuf_key_value_pair();
  
  ManaMessageProtobuf_key_value_pair(const ManaMessageProtobuf_key_value_pair& from);
  
  inline ManaMessageProtobuf_key_value_pair& operator=(const ManaMessageProtobuf_key_value_pair& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ManaMessageProtobuf_key_value_pair& default_instance();
  
  void Swap(ManaMessageProtobuf_key_value_pair* other);
  
  // implements Message ----------------------------------------------
  
  ManaMessageProtobuf_key_value_pair* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ManaMessageProtobuf_key_value_pair& from);
  void MergeFrom(const ManaMessageProtobuf_key_value_pair& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline const ::std::string& key() const;
  inline void set_key(const ::std::string& value);
  inline void set_key(const char* value);
  inline void set_key(const char* value, size_t size);
  inline ::std::string* mutable_key();
  inline ::std::string* release_key();
  
  // required string value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline const ::std::string& value() const;
  inline void set_value(const ::std::string& value);
  inline void set_value(const char* value);
  inline void set_value(const char* value, size_t size);
  inline ::std::string* mutable_value();
  inline ::std::string* release_value();
  
  // @@protoc_insertion_point(class_scope:mana.ManaMessageProtobuf.key_value_pair)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_value();
  inline void clear_has_value();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* key_;
  ::std::string* value_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_ManaMessageProtobuf_2eproto();
  friend void protobuf_AssignDesc_ManaMessageProtobuf_2eproto();
  friend void protobuf_ShutdownFile_ManaMessageProtobuf_2eproto();
  
  void InitAsDefaultInstance();
  static ManaMessageProtobuf_key_value_pair* default_instance_;
};
// -------------------------------------------------------------------

class ManaMessageProtobuf : public ::google::protobuf::Message {
 public:
  ManaMessageProtobuf();
  virtual ~ManaMessageProtobuf();
  
  ManaMessageProtobuf(const ManaMessageProtobuf& from);
  
  inline ManaMessageProtobuf& operator=(const ManaMessageProtobuf& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ManaMessageProtobuf& default_instance();
  
  void Swap(ManaMessageProtobuf* other);
  
  // implements Message ----------------------------------------------
  
  ManaMessageProtobuf* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ManaMessageProtobuf& from);
  void MergeFrom(const ManaMessageProtobuf& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef ManaMessageProtobuf_value_t value_t;
  typedef ManaMessageProtobuf_subscription_t subscription_t;
  typedef ManaMessageProtobuf_notification_t notification_t;
  typedef ManaMessageProtobuf_key_value_pair key_value_pair;
  
  typedef ManaMessageProtobuf_message_type_t message_type_t;
  static const message_type_t START_SESSION = ManaMessageProtobuf_message_type_t_START_SESSION;
  static const message_type_t START_SESSION_ACK = ManaMessageProtobuf_message_type_t_START_SESSION_ACK;
  static const message_type_t START_SESSION_ACK_ACK = ManaMessageProtobuf_message_type_t_START_SESSION_ACK_ACK;
  static const message_type_t TERMINATE_SESSION = ManaMessageProtobuf_message_type_t_TERMINATE_SESSION;
  static const message_type_t TERMINATE_SESSION_ACK = ManaMessageProtobuf_message_type_t_TERMINATE_SESSION_ACK;
  static const message_type_t ACK = ManaMessageProtobuf_message_type_t_ACK;
  static const message_type_t HEARTBEAT = ManaMessageProtobuf_message_type_t_HEARTBEAT;
  static const message_type_t SUB = ManaMessageProtobuf_message_type_t_SUB;
  static const message_type_t NOT = ManaMessageProtobuf_message_type_t_NOT;
  static const message_type_t UNSUB = ManaMessageProtobuf_message_type_t_UNSUB;
  static const message_type_t ERR_NOT_SUPPORTED = ManaMessageProtobuf_message_type_t_ERR_NOT_SUPPORTED;
  static inline bool message_type_t_IsValid(int value) {
    return ManaMessageProtobuf_message_type_t_IsValid(value);
  }
  static const message_type_t message_type_t_MIN =
    ManaMessageProtobuf_message_type_t_message_type_t_MIN;
  static const message_type_t message_type_t_MAX =
    ManaMessageProtobuf_message_type_t_message_type_t_MAX;
  static const int message_type_t_ARRAYSIZE =
    ManaMessageProtobuf_message_type_t_message_type_t_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  message_type_t_descriptor() {
    return ManaMessageProtobuf_message_type_t_descriptor();
  }
  static inline const ::std::string& message_type_t_Name(message_type_t value) {
    return ManaMessageProtobuf_message_type_t_Name(value);
  }
  static inline bool message_type_t_Parse(const ::std::string& name,
      message_type_t* value) {
    return ManaMessageProtobuf_message_type_t_Parse(name, value);
  }
  
  typedef ManaMessageProtobuf_tag_type_t tag_type_t;
  static const tag_type_t STRING = ManaMessageProtobuf_tag_type_t_STRING;
  static const tag_type_t INT = ManaMessageProtobuf_tag_type_t_INT;
  static const tag_type_t DOUBLE = ManaMessageProtobuf_tag_type_t_DOUBLE;
  static const tag_type_t BOOL = ManaMessageProtobuf_tag_type_t_BOOL;
  static const tag_type_t ANY_TYPE = ManaMessageProtobuf_tag_type_t_ANY_TYPE;
  static inline bool tag_type_t_IsValid(int value) {
    return ManaMessageProtobuf_tag_type_t_IsValid(value);
  }
  static const tag_type_t tag_type_t_MIN =
    ManaMessageProtobuf_tag_type_t_tag_type_t_MIN;
  static const tag_type_t tag_type_t_MAX =
    ManaMessageProtobuf_tag_type_t_tag_type_t_MAX;
  static const int tag_type_t_ARRAYSIZE =
    ManaMessageProtobuf_tag_type_t_tag_type_t_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  tag_type_t_descriptor() {
    return ManaMessageProtobuf_tag_type_t_descriptor();
  }
  static inline const ::std::string& tag_type_t_Name(tag_type_t value) {
    return ManaMessageProtobuf_tag_type_t_Name(value);
  }
  static inline bool tag_type_t_Parse(const ::std::string& name,
      tag_type_t* value) {
    return ManaMessageProtobuf_tag_type_t_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // required .mana.ManaMessageProtobuf.message_type_t type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::mana::ManaMessageProtobuf_message_type_t type() const;
  inline void set_type(::mana::ManaMessageProtobuf_message_type_t value);
  
  // required string sender = 2;
  inline bool has_sender() const;
  inline void clear_sender();
  static const int kSenderFieldNumber = 2;
  inline const ::std::string& sender() const;
  inline void set_sender(const ::std::string& value);
  inline void set_sender(const char* value);
  inline void set_sender(const char* value, size_t size);
  inline ::std::string* mutable_sender();
  inline ::std::string* release_sender();
  
  // optional int32 seq_no = 3;
  inline bool has_seq_no() const;
  inline void clear_seq_no();
  static const int kSeqNoFieldNumber = 3;
  inline ::google::protobuf::int32 seq_no() const;
  inline void set_seq_no(::google::protobuf::int32 value);
  
  // optional .mana.ManaMessageProtobuf.subscription_t subscription = 4;
  inline bool has_subscription() const;
  inline void clear_subscription();
  static const int kSubscriptionFieldNumber = 4;
  inline const ::mana::ManaMessageProtobuf_subscription_t& subscription() const;
  inline ::mana::ManaMessageProtobuf_subscription_t* mutable_subscription();
  inline ::mana::ManaMessageProtobuf_subscription_t* release_subscription();
  
  // optional .mana.ManaMessageProtobuf.notification_t notification = 5;
  inline bool has_notification() const;
  inline void clear_notification();
  static const int kNotificationFieldNumber = 5;
  inline const ::mana::ManaMessageProtobuf_notification_t& notification() const;
  inline ::mana::ManaMessageProtobuf_notification_t* mutable_notification();
  inline ::mana::ManaMessageProtobuf_notification_t* release_notification();
  
  // optional string unsubscription = 6;
  inline bool has_unsubscription() const;
  inline void clear_unsubscription();
  static const int kUnsubscriptionFieldNumber = 6;
  inline const ::std::string& unsubscription() const;
  inline void set_unsubscription(const ::std::string& value);
  inline void set_unsubscription(const char* value);
  inline void set_unsubscription(const char* value, size_t size);
  inline ::std::string* mutable_unsubscription();
  inline ::std::string* release_unsubscription();
  
  // optional bytes payload = 7;
  inline bool has_payload() const;
  inline void clear_payload();
  static const int kPayloadFieldNumber = 7;
  inline const ::std::string& payload() const;
  inline void set_payload(const ::std::string& value);
  inline void set_payload(const char* value);
  inline void set_payload(const void* value, size_t size);
  inline ::std::string* mutable_payload();
  inline ::std::string* release_payload();
  
  // repeated .mana.ManaMessageProtobuf.key_value_pair key_value_map = 8;
  inline int key_value_map_size() const;
  inline void clear_key_value_map();
  static const int kKeyValueMapFieldNumber = 8;
  inline const ::mana::ManaMessageProtobuf_key_value_pair& key_value_map(int index) const;
  inline ::mana::ManaMessageProtobuf_key_value_pair* mutable_key_value_map(int index);
  inline ::mana::ManaMessageProtobuf_key_value_pair* add_key_value_map();
  inline const ::google::protobuf::RepeatedPtrField< ::mana::ManaMessageProtobuf_key_value_pair >&
      key_value_map() const;
  inline ::google::protobuf::RepeatedPtrField< ::mana::ManaMessageProtobuf_key_value_pair >*
      mutable_key_value_map();
  
  // @@protoc_insertion_point(class_scope:mana.ManaMessageProtobuf)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_sender();
  inline void clear_has_sender();
  inline void set_has_seq_no();
  inline void clear_has_seq_no();
  inline void set_has_subscription();
  inline void clear_has_subscription();
  inline void set_has_notification();
  inline void clear_has_notification();
  inline void set_has_unsubscription();
  inline void clear_has_unsubscription();
  inline void set_has_payload();
  inline void clear_has_payload();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* sender_;
  int type_;
  ::google::protobuf::int32 seq_no_;
  ::mana::ManaMessageProtobuf_subscription_t* subscription_;
  ::mana::ManaMessageProtobuf_notification_t* notification_;
  ::std::string* unsubscription_;
  ::std::string* payload_;
  ::google::protobuf::RepeatedPtrField< ::mana::ManaMessageProtobuf_key_value_pair > key_value_map_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  friend void  protobuf_AddDesc_ManaMessageProtobuf_2eproto();
  friend void protobuf_AssignDesc_ManaMessageProtobuf_2eproto();
  friend void protobuf_ShutdownFile_ManaMessageProtobuf_2eproto();
  
  void InitAsDefaultInstance();
  static ManaMessageProtobuf* default_instance_;
};
// ===================================================================


// ===================================================================

// ManaMessageProtobuf_value_t

// required .mana.ManaMessageProtobuf.tag_type_t type = 1;
inline bool ManaMessageProtobuf_value_t::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ManaMessageProtobuf_value_t::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ManaMessageProtobuf_value_t::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ManaMessageProtobuf_value_t::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::mana::ManaMessageProtobuf_tag_type_t ManaMessageProtobuf_value_t::type() const {
  return static_cast< ::mana::ManaMessageProtobuf_tag_type_t >(type_);
}
inline void ManaMessageProtobuf_value_t::set_type(::mana::ManaMessageProtobuf_tag_type_t value) {
  GOOGLE_DCHECK(::mana::ManaMessageProtobuf_tag_type_t_IsValid(value));
  set_has_type();
  type_ = value;
}

// optional string string_value = 2;
inline bool ManaMessageProtobuf_value_t::has_string_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ManaMessageProtobuf_value_t::set_has_string_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ManaMessageProtobuf_value_t::clear_has_string_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ManaMessageProtobuf_value_t::clear_string_value() {
  if (string_value_ != &::google::protobuf::internal::kEmptyString) {
    string_value_->clear();
  }
  clear_has_string_value();
}
inline const ::std::string& ManaMessageProtobuf_value_t::string_value() const {
  return *string_value_;
}
inline void ManaMessageProtobuf_value_t::set_string_value(const ::std::string& value) {
  set_has_string_value();
  if (string_value_ == &::google::protobuf::internal::kEmptyString) {
    string_value_ = new ::std::string;
  }
  string_value_->assign(value);
}
inline void ManaMessageProtobuf_value_t::set_string_value(const char* value) {
  set_has_string_value();
  if (string_value_ == &::google::protobuf::internal::kEmptyString) {
    string_value_ = new ::std::string;
  }
  string_value_->assign(value);
}
inline void ManaMessageProtobuf_value_t::set_string_value(const char* value, size_t size) {
  set_has_string_value();
  if (string_value_ == &::google::protobuf::internal::kEmptyString) {
    string_value_ = new ::std::string;
  }
  string_value_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ManaMessageProtobuf_value_t::mutable_string_value() {
  set_has_string_value();
  if (string_value_ == &::google::protobuf::internal::kEmptyString) {
    string_value_ = new ::std::string;
  }
  return string_value_;
}
inline ::std::string* ManaMessageProtobuf_value_t::release_string_value() {
  clear_has_string_value();
  if (string_value_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = string_value_;
    string_value_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional int32 int_value = 3;
inline bool ManaMessageProtobuf_value_t::has_int_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ManaMessageProtobuf_value_t::set_has_int_value() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ManaMessageProtobuf_value_t::clear_has_int_value() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ManaMessageProtobuf_value_t::clear_int_value() {
  int_value_ = 0;
  clear_has_int_value();
}
inline ::google::protobuf::int32 ManaMessageProtobuf_value_t::int_value() const {
  return int_value_;
}
inline void ManaMessageProtobuf_value_t::set_int_value(::google::protobuf::int32 value) {
  set_has_int_value();
  int_value_ = value;
}

// optional double double_value = 4;
inline bool ManaMessageProtobuf_value_t::has_double_value() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ManaMessageProtobuf_value_t::set_has_double_value() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ManaMessageProtobuf_value_t::clear_has_double_value() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ManaMessageProtobuf_value_t::clear_double_value() {
  double_value_ = 0;
  clear_has_double_value();
}
inline double ManaMessageProtobuf_value_t::double_value() const {
  return double_value_;
}
inline void ManaMessageProtobuf_value_t::set_double_value(double value) {
  set_has_double_value();
  double_value_ = value;
}

// optional bool bool_value = 5;
inline bool ManaMessageProtobuf_value_t::has_bool_value() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ManaMessageProtobuf_value_t::set_has_bool_value() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ManaMessageProtobuf_value_t::clear_has_bool_value() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ManaMessageProtobuf_value_t::clear_bool_value() {
  bool_value_ = false;
  clear_has_bool_value();
}
inline bool ManaMessageProtobuf_value_t::bool_value() const {
  return bool_value_;
}
inline void ManaMessageProtobuf_value_t::set_bool_value(bool value) {
  set_has_bool_value();
  bool_value_ = value;
}

// -------------------------------------------------------------------

// ManaMessageProtobuf_subscription_t_constraint_t

// required string name = 1;
inline bool ManaMessageProtobuf_subscription_t_constraint_t::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ManaMessageProtobuf_subscription_t_constraint_t::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ManaMessageProtobuf_subscription_t_constraint_t::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ManaMessageProtobuf_subscription_t_constraint_t::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& ManaMessageProtobuf_subscription_t_constraint_t::name() const {
  return *name_;
}
inline void ManaMessageProtobuf_subscription_t_constraint_t::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void ManaMessageProtobuf_subscription_t_constraint_t::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void ManaMessageProtobuf_subscription_t_constraint_t::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ManaMessageProtobuf_subscription_t_constraint_t::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* ManaMessageProtobuf_subscription_t_constraint_t::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required .mana.ManaMessageProtobuf.subscription_t.operator_t op = 2;
inline bool ManaMessageProtobuf_subscription_t_constraint_t::has_op() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ManaMessageProtobuf_subscription_t_constraint_t::set_has_op() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ManaMessageProtobuf_subscription_t_constraint_t::clear_has_op() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ManaMessageProtobuf_subscription_t_constraint_t::clear_op() {
  op_ = 1;
  clear_has_op();
}
inline ::mana::ManaMessageProtobuf_subscription_t_operator_t ManaMessageProtobuf_subscription_t_constraint_t::op() const {
  return static_cast< ::mana::ManaMessageProtobuf_subscription_t_operator_t >(op_);
}
inline void ManaMessageProtobuf_subscription_t_constraint_t::set_op(::mana::ManaMessageProtobuf_subscription_t_operator_t value) {
  GOOGLE_DCHECK(::mana::ManaMessageProtobuf_subscription_t_operator_t_IsValid(value));
  set_has_op();
  op_ = value;
}

// required .mana.ManaMessageProtobuf.value_t value = 3;
inline bool ManaMessageProtobuf_subscription_t_constraint_t::has_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ManaMessageProtobuf_subscription_t_constraint_t::set_has_value() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ManaMessageProtobuf_subscription_t_constraint_t::clear_has_value() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ManaMessageProtobuf_subscription_t_constraint_t::clear_value() {
  if (value_ != NULL) value_->::mana::ManaMessageProtobuf_value_t::Clear();
  clear_has_value();
}
inline const ::mana::ManaMessageProtobuf_value_t& ManaMessageProtobuf_subscription_t_constraint_t::value() const {
  return value_ != NULL ? *value_ : *default_instance_->value_;
}
inline ::mana::ManaMessageProtobuf_value_t* ManaMessageProtobuf_subscription_t_constraint_t::mutable_value() {
  set_has_value();
  if (value_ == NULL) value_ = new ::mana::ManaMessageProtobuf_value_t;
  return value_;
}
inline ::mana::ManaMessageProtobuf_value_t* ManaMessageProtobuf_subscription_t_constraint_t::release_value() {
  clear_has_value();
  ::mana::ManaMessageProtobuf_value_t* temp = value_;
  value_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// ManaMessageProtobuf_subscription_t

// repeated .mana.ManaMessageProtobuf.subscription_t.constraint_t constraints = 1;
inline int ManaMessageProtobuf_subscription_t::constraints_size() const {
  return constraints_.size();
}
inline void ManaMessageProtobuf_subscription_t::clear_constraints() {
  constraints_.Clear();
}
inline const ::mana::ManaMessageProtobuf_subscription_t_constraint_t& ManaMessageProtobuf_subscription_t::constraints(int index) const {
  return constraints_.Get(index);
}
inline ::mana::ManaMessageProtobuf_subscription_t_constraint_t* ManaMessageProtobuf_subscription_t::mutable_constraints(int index) {
  return constraints_.Mutable(index);
}
inline ::mana::ManaMessageProtobuf_subscription_t_constraint_t* ManaMessageProtobuf_subscription_t::add_constraints() {
  return constraints_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::mana::ManaMessageProtobuf_subscription_t_constraint_t >&
ManaMessageProtobuf_subscription_t::constraints() const {
  return constraints_;
}
inline ::google::protobuf::RepeatedPtrField< ::mana::ManaMessageProtobuf_subscription_t_constraint_t >*
ManaMessageProtobuf_subscription_t::mutable_constraints() {
  return &constraints_;
}

// -------------------------------------------------------------------

// ManaMessageProtobuf_notification_t_attribute_t

// required string name = 1;
inline bool ManaMessageProtobuf_notification_t_attribute_t::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ManaMessageProtobuf_notification_t_attribute_t::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ManaMessageProtobuf_notification_t_attribute_t::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ManaMessageProtobuf_notification_t_attribute_t::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& ManaMessageProtobuf_notification_t_attribute_t::name() const {
  return *name_;
}
inline void ManaMessageProtobuf_notification_t_attribute_t::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void ManaMessageProtobuf_notification_t_attribute_t::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void ManaMessageProtobuf_notification_t_attribute_t::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ManaMessageProtobuf_notification_t_attribute_t::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* ManaMessageProtobuf_notification_t_attribute_t::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required .mana.ManaMessageProtobuf.value_t value = 2;
inline bool ManaMessageProtobuf_notification_t_attribute_t::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ManaMessageProtobuf_notification_t_attribute_t::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ManaMessageProtobuf_notification_t_attribute_t::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ManaMessageProtobuf_notification_t_attribute_t::clear_value() {
  if (value_ != NULL) value_->::mana::ManaMessageProtobuf_value_t::Clear();
  clear_has_value();
}
inline const ::mana::ManaMessageProtobuf_value_t& ManaMessageProtobuf_notification_t_attribute_t::value() const {
  return value_ != NULL ? *value_ : *default_instance_->value_;
}
inline ::mana::ManaMessageProtobuf_value_t* ManaMessageProtobuf_notification_t_attribute_t::mutable_value() {
  set_has_value();
  if (value_ == NULL) value_ = new ::mana::ManaMessageProtobuf_value_t;
  return value_;
}
inline ::mana::ManaMessageProtobuf_value_t* ManaMessageProtobuf_notification_t_attribute_t::release_value() {
  clear_has_value();
  ::mana::ManaMessageProtobuf_value_t* temp = value_;
  value_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// ManaMessageProtobuf_notification_t

// repeated .mana.ManaMessageProtobuf.notification_t.attribute_t attribute = 1;
inline int ManaMessageProtobuf_notification_t::attribute_size() const {
  return attribute_.size();
}
inline void ManaMessageProtobuf_notification_t::clear_attribute() {
  attribute_.Clear();
}
inline const ::mana::ManaMessageProtobuf_notification_t_attribute_t& ManaMessageProtobuf_notification_t::attribute(int index) const {
  return attribute_.Get(index);
}
inline ::mana::ManaMessageProtobuf_notification_t_attribute_t* ManaMessageProtobuf_notification_t::mutable_attribute(int index) {
  return attribute_.Mutable(index);
}
inline ::mana::ManaMessageProtobuf_notification_t_attribute_t* ManaMessageProtobuf_notification_t::add_attribute() {
  return attribute_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::mana::ManaMessageProtobuf_notification_t_attribute_t >&
ManaMessageProtobuf_notification_t::attribute() const {
  return attribute_;
}
inline ::google::protobuf::RepeatedPtrField< ::mana::ManaMessageProtobuf_notification_t_attribute_t >*
ManaMessageProtobuf_notification_t::mutable_attribute() {
  return &attribute_;
}

// -------------------------------------------------------------------

// ManaMessageProtobuf_key_value_pair

// required string key = 1;
inline bool ManaMessageProtobuf_key_value_pair::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ManaMessageProtobuf_key_value_pair::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ManaMessageProtobuf_key_value_pair::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ManaMessageProtobuf_key_value_pair::clear_key() {
  if (key_ != &::google::protobuf::internal::kEmptyString) {
    key_->clear();
  }
  clear_has_key();
}
inline const ::std::string& ManaMessageProtobuf_key_value_pair::key() const {
  return *key_;
}
inline void ManaMessageProtobuf_key_value_pair::set_key(const ::std::string& value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(value);
}
inline void ManaMessageProtobuf_key_value_pair::set_key(const char* value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(value);
}
inline void ManaMessageProtobuf_key_value_pair::set_key(const char* value, size_t size) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ManaMessageProtobuf_key_value_pair::mutable_key() {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  return key_;
}
inline ::std::string* ManaMessageProtobuf_key_value_pair::release_key() {
  clear_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = key_;
    key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required string value = 2;
inline bool ManaMessageProtobuf_key_value_pair::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ManaMessageProtobuf_key_value_pair::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ManaMessageProtobuf_key_value_pair::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ManaMessageProtobuf_key_value_pair::clear_value() {
  if (value_ != &::google::protobuf::internal::kEmptyString) {
    value_->clear();
  }
  clear_has_value();
}
inline const ::std::string& ManaMessageProtobuf_key_value_pair::value() const {
  return *value_;
}
inline void ManaMessageProtobuf_key_value_pair::set_value(const ::std::string& value) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  value_->assign(value);
}
inline void ManaMessageProtobuf_key_value_pair::set_value(const char* value) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  value_->assign(value);
}
inline void ManaMessageProtobuf_key_value_pair::set_value(const char* value, size_t size) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  value_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ManaMessageProtobuf_key_value_pair::mutable_value() {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  return value_;
}
inline ::std::string* ManaMessageProtobuf_key_value_pair::release_value() {
  clear_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = value_;
    value_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// ManaMessageProtobuf

// required .mana.ManaMessageProtobuf.message_type_t type = 1;
inline bool ManaMessageProtobuf::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ManaMessageProtobuf::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ManaMessageProtobuf::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ManaMessageProtobuf::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::mana::ManaMessageProtobuf_message_type_t ManaMessageProtobuf::type() const {
  return static_cast< ::mana::ManaMessageProtobuf_message_type_t >(type_);
}
inline void ManaMessageProtobuf::set_type(::mana::ManaMessageProtobuf_message_type_t value) {
  GOOGLE_DCHECK(::mana::ManaMessageProtobuf_message_type_t_IsValid(value));
  set_has_type();
  type_ = value;
}

// required string sender = 2;
inline bool ManaMessageProtobuf::has_sender() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ManaMessageProtobuf::set_has_sender() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ManaMessageProtobuf::clear_has_sender() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ManaMessageProtobuf::clear_sender() {
  if (sender_ != &::google::protobuf::internal::kEmptyString) {
    sender_->clear();
  }
  clear_has_sender();
}
inline const ::std::string& ManaMessageProtobuf::sender() const {
  return *sender_;
}
inline void ManaMessageProtobuf::set_sender(const ::std::string& value) {
  set_has_sender();
  if (sender_ == &::google::protobuf::internal::kEmptyString) {
    sender_ = new ::std::string;
  }
  sender_->assign(value);
}
inline void ManaMessageProtobuf::set_sender(const char* value) {
  set_has_sender();
  if (sender_ == &::google::protobuf::internal::kEmptyString) {
    sender_ = new ::std::string;
  }
  sender_->assign(value);
}
inline void ManaMessageProtobuf::set_sender(const char* value, size_t size) {
  set_has_sender();
  if (sender_ == &::google::protobuf::internal::kEmptyString) {
    sender_ = new ::std::string;
  }
  sender_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ManaMessageProtobuf::mutable_sender() {
  set_has_sender();
  if (sender_ == &::google::protobuf::internal::kEmptyString) {
    sender_ = new ::std::string;
  }
  return sender_;
}
inline ::std::string* ManaMessageProtobuf::release_sender() {
  clear_has_sender();
  if (sender_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = sender_;
    sender_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional int32 seq_no = 3;
inline bool ManaMessageProtobuf::has_seq_no() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ManaMessageProtobuf::set_has_seq_no() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ManaMessageProtobuf::clear_has_seq_no() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ManaMessageProtobuf::clear_seq_no() {
  seq_no_ = 0;
  clear_has_seq_no();
}
inline ::google::protobuf::int32 ManaMessageProtobuf::seq_no() const {
  return seq_no_;
}
inline void ManaMessageProtobuf::set_seq_no(::google::protobuf::int32 value) {
  set_has_seq_no();
  seq_no_ = value;
}

// optional .mana.ManaMessageProtobuf.subscription_t subscription = 4;
inline bool ManaMessageProtobuf::has_subscription() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ManaMessageProtobuf::set_has_subscription() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ManaMessageProtobuf::clear_has_subscription() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ManaMessageProtobuf::clear_subscription() {
  if (subscription_ != NULL) subscription_->::mana::ManaMessageProtobuf_subscription_t::Clear();
  clear_has_subscription();
}
inline const ::mana::ManaMessageProtobuf_subscription_t& ManaMessageProtobuf::subscription() const {
  return subscription_ != NULL ? *subscription_ : *default_instance_->subscription_;
}
inline ::mana::ManaMessageProtobuf_subscription_t* ManaMessageProtobuf::mutable_subscription() {
  set_has_subscription();
  if (subscription_ == NULL) subscription_ = new ::mana::ManaMessageProtobuf_subscription_t;
  return subscription_;
}
inline ::mana::ManaMessageProtobuf_subscription_t* ManaMessageProtobuf::release_subscription() {
  clear_has_subscription();
  ::mana::ManaMessageProtobuf_subscription_t* temp = subscription_;
  subscription_ = NULL;
  return temp;
}

// optional .mana.ManaMessageProtobuf.notification_t notification = 5;
inline bool ManaMessageProtobuf::has_notification() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ManaMessageProtobuf::set_has_notification() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ManaMessageProtobuf::clear_has_notification() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ManaMessageProtobuf::clear_notification() {
  if (notification_ != NULL) notification_->::mana::ManaMessageProtobuf_notification_t::Clear();
  clear_has_notification();
}
inline const ::mana::ManaMessageProtobuf_notification_t& ManaMessageProtobuf::notification() const {
  return notification_ != NULL ? *notification_ : *default_instance_->notification_;
}
inline ::mana::ManaMessageProtobuf_notification_t* ManaMessageProtobuf::mutable_notification() {
  set_has_notification();
  if (notification_ == NULL) notification_ = new ::mana::ManaMessageProtobuf_notification_t;
  return notification_;
}
inline ::mana::ManaMessageProtobuf_notification_t* ManaMessageProtobuf::release_notification() {
  clear_has_notification();
  ::mana::ManaMessageProtobuf_notification_t* temp = notification_;
  notification_ = NULL;
  return temp;
}

// optional string unsubscription = 6;
inline bool ManaMessageProtobuf::has_unsubscription() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ManaMessageProtobuf::set_has_unsubscription() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ManaMessageProtobuf::clear_has_unsubscription() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ManaMessageProtobuf::clear_unsubscription() {
  if (unsubscription_ != &::google::protobuf::internal::kEmptyString) {
    unsubscription_->clear();
  }
  clear_has_unsubscription();
}
inline const ::std::string& ManaMessageProtobuf::unsubscription() const {
  return *unsubscription_;
}
inline void ManaMessageProtobuf::set_unsubscription(const ::std::string& value) {
  set_has_unsubscription();
  if (unsubscription_ == &::google::protobuf::internal::kEmptyString) {
    unsubscription_ = new ::std::string;
  }
  unsubscription_->assign(value);
}
inline void ManaMessageProtobuf::set_unsubscription(const char* value) {
  set_has_unsubscription();
  if (unsubscription_ == &::google::protobuf::internal::kEmptyString) {
    unsubscription_ = new ::std::string;
  }
  unsubscription_->assign(value);
}
inline void ManaMessageProtobuf::set_unsubscription(const char* value, size_t size) {
  set_has_unsubscription();
  if (unsubscription_ == &::google::protobuf::internal::kEmptyString) {
    unsubscription_ = new ::std::string;
  }
  unsubscription_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ManaMessageProtobuf::mutable_unsubscription() {
  set_has_unsubscription();
  if (unsubscription_ == &::google::protobuf::internal::kEmptyString) {
    unsubscription_ = new ::std::string;
  }
  return unsubscription_;
}
inline ::std::string* ManaMessageProtobuf::release_unsubscription() {
  clear_has_unsubscription();
  if (unsubscription_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = unsubscription_;
    unsubscription_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional bytes payload = 7;
inline bool ManaMessageProtobuf::has_payload() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ManaMessageProtobuf::set_has_payload() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ManaMessageProtobuf::clear_has_payload() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ManaMessageProtobuf::clear_payload() {
  if (payload_ != &::google::protobuf::internal::kEmptyString) {
    payload_->clear();
  }
  clear_has_payload();
}
inline const ::std::string& ManaMessageProtobuf::payload() const {
  return *payload_;
}
inline void ManaMessageProtobuf::set_payload(const ::std::string& value) {
  set_has_payload();
  if (payload_ == &::google::protobuf::internal::kEmptyString) {
    payload_ = new ::std::string;
  }
  payload_->assign(value);
}
inline void ManaMessageProtobuf::set_payload(const char* value) {
  set_has_payload();
  if (payload_ == &::google::protobuf::internal::kEmptyString) {
    payload_ = new ::std::string;
  }
  payload_->assign(value);
}
inline void ManaMessageProtobuf::set_payload(const void* value, size_t size) {
  set_has_payload();
  if (payload_ == &::google::protobuf::internal::kEmptyString) {
    payload_ = new ::std::string;
  }
  payload_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ManaMessageProtobuf::mutable_payload() {
  set_has_payload();
  if (payload_ == &::google::protobuf::internal::kEmptyString) {
    payload_ = new ::std::string;
  }
  return payload_;
}
inline ::std::string* ManaMessageProtobuf::release_payload() {
  clear_has_payload();
  if (payload_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = payload_;
    payload_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// repeated .mana.ManaMessageProtobuf.key_value_pair key_value_map = 8;
inline int ManaMessageProtobuf::key_value_map_size() const {
  return key_value_map_.size();
}
inline void ManaMessageProtobuf::clear_key_value_map() {
  key_value_map_.Clear();
}
inline const ::mana::ManaMessageProtobuf_key_value_pair& ManaMessageProtobuf::key_value_map(int index) const {
  return key_value_map_.Get(index);
}
inline ::mana::ManaMessageProtobuf_key_value_pair* ManaMessageProtobuf::mutable_key_value_map(int index) {
  return key_value_map_.Mutable(index);
}
inline ::mana::ManaMessageProtobuf_key_value_pair* ManaMessageProtobuf::add_key_value_map() {
  return key_value_map_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::mana::ManaMessageProtobuf_key_value_pair >&
ManaMessageProtobuf::key_value_map() const {
  return key_value_map_;
}
inline ::google::protobuf::RepeatedPtrField< ::mana::ManaMessageProtobuf_key_value_pair >*
ManaMessageProtobuf::mutable_key_value_map() {
  return &key_value_map_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace mana

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::mana::ManaMessageProtobuf_subscription_t_operator_t>() {
  return ::mana::ManaMessageProtobuf_subscription_t_operator_t_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::mana::ManaMessageProtobuf_message_type_t>() {
  return ::mana::ManaMessageProtobuf_message_type_t_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::mana::ManaMessageProtobuf_tag_type_t>() {
  return ::mana::ManaMessageProtobuf_tag_type_t_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ManaMessageProtobuf_2eproto__INCLUDED
