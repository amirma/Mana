// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ManaMessage.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace mana {

namespace {

const ::google::protobuf::Descriptor* ManaMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ManaMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* ManaMessage_value_t_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ManaMessage_value_t_reflection_ = NULL;
const ::google::protobuf::Descriptor* ManaMessage_subscription_t_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ManaMessage_subscription_t_reflection_ = NULL;
const ::google::protobuf::Descriptor* ManaMessage_subscription_t_constraint_t_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ManaMessage_subscription_t_constraint_t_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* ManaMessage_subscription_t_operator_t_descriptor_ = NULL;
const ::google::protobuf::Descriptor* ManaMessage_notification_t_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ManaMessage_notification_t_reflection_ = NULL;
const ::google::protobuf::Descriptor* ManaMessage_notification_t_attribute_t_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ManaMessage_notification_t_attribute_t_reflection_ = NULL;
const ::google::protobuf::Descriptor* ManaMessage_key_value_pair_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ManaMessage_key_value_pair_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* ManaMessage_message_type_t_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* ManaMessage_tag_type_t_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_ManaMessage_2eproto() {
  protobuf_AddDesc_ManaMessage_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ManaMessage.proto");
  GOOGLE_CHECK(file != NULL);
  ManaMessage_descriptor_ = file->message_type(0);
  static const int ManaMessage_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ManaMessage, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ManaMessage, sender_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ManaMessage, seq_no_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ManaMessage, subscription_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ManaMessage, notification_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ManaMessage, unsubscription_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ManaMessage, payload_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ManaMessage, key_value_map_),
  };
  ManaMessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ManaMessage_descriptor_,
      ManaMessage::default_instance_,
      ManaMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ManaMessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ManaMessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ManaMessage));
  ManaMessage_value_t_descriptor_ = ManaMessage_descriptor_->nested_type(0);
  static const int ManaMessage_value_t_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ManaMessage_value_t, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ManaMessage_value_t, string_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ManaMessage_value_t, int_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ManaMessage_value_t, double_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ManaMessage_value_t, bool_value_),
  };
  ManaMessage_value_t_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ManaMessage_value_t_descriptor_,
      ManaMessage_value_t::default_instance_,
      ManaMessage_value_t_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ManaMessage_value_t, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ManaMessage_value_t, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ManaMessage_value_t));
  ManaMessage_subscription_t_descriptor_ = ManaMessage_descriptor_->nested_type(1);
  static const int ManaMessage_subscription_t_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ManaMessage_subscription_t, constraints_),
  };
  ManaMessage_subscription_t_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ManaMessage_subscription_t_descriptor_,
      ManaMessage_subscription_t::default_instance_,
      ManaMessage_subscription_t_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ManaMessage_subscription_t, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ManaMessage_subscription_t, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ManaMessage_subscription_t));
  ManaMessage_subscription_t_constraint_t_descriptor_ = ManaMessage_subscription_t_descriptor_->nested_type(0);
  static const int ManaMessage_subscription_t_constraint_t_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ManaMessage_subscription_t_constraint_t, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ManaMessage_subscription_t_constraint_t, op_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ManaMessage_subscription_t_constraint_t, value_),
  };
  ManaMessage_subscription_t_constraint_t_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ManaMessage_subscription_t_constraint_t_descriptor_,
      ManaMessage_subscription_t_constraint_t::default_instance_,
      ManaMessage_subscription_t_constraint_t_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ManaMessage_subscription_t_constraint_t, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ManaMessage_subscription_t_constraint_t, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ManaMessage_subscription_t_constraint_t));
  ManaMessage_subscription_t_operator_t_descriptor_ = ManaMessage_subscription_t_descriptor_->enum_type(0);
  ManaMessage_notification_t_descriptor_ = ManaMessage_descriptor_->nested_type(2);
  static const int ManaMessage_notification_t_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ManaMessage_notification_t, attribute_),
  };
  ManaMessage_notification_t_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ManaMessage_notification_t_descriptor_,
      ManaMessage_notification_t::default_instance_,
      ManaMessage_notification_t_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ManaMessage_notification_t, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ManaMessage_notification_t, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ManaMessage_notification_t));
  ManaMessage_notification_t_attribute_t_descriptor_ = ManaMessage_notification_t_descriptor_->nested_type(0);
  static const int ManaMessage_notification_t_attribute_t_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ManaMessage_notification_t_attribute_t, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ManaMessage_notification_t_attribute_t, value_),
  };
  ManaMessage_notification_t_attribute_t_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ManaMessage_notification_t_attribute_t_descriptor_,
      ManaMessage_notification_t_attribute_t::default_instance_,
      ManaMessage_notification_t_attribute_t_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ManaMessage_notification_t_attribute_t, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ManaMessage_notification_t_attribute_t, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ManaMessage_notification_t_attribute_t));
  ManaMessage_key_value_pair_descriptor_ = ManaMessage_descriptor_->nested_type(3);
  static const int ManaMessage_key_value_pair_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ManaMessage_key_value_pair, key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ManaMessage_key_value_pair, value_),
  };
  ManaMessage_key_value_pair_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ManaMessage_key_value_pair_descriptor_,
      ManaMessage_key_value_pair::default_instance_,
      ManaMessage_key_value_pair_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ManaMessage_key_value_pair, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ManaMessage_key_value_pair, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ManaMessage_key_value_pair));
  ManaMessage_message_type_t_descriptor_ = ManaMessage_descriptor_->enum_type(0);
  ManaMessage_tag_type_t_descriptor_ = ManaMessage_descriptor_->enum_type(1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ManaMessage_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ManaMessage_descriptor_, &ManaMessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ManaMessage_value_t_descriptor_, &ManaMessage_value_t::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ManaMessage_subscription_t_descriptor_, &ManaMessage_subscription_t::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ManaMessage_subscription_t_constraint_t_descriptor_, &ManaMessage_subscription_t_constraint_t::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ManaMessage_notification_t_descriptor_, &ManaMessage_notification_t::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ManaMessage_notification_t_attribute_t_descriptor_, &ManaMessage_notification_t_attribute_t::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ManaMessage_key_value_pair_descriptor_, &ManaMessage_key_value_pair::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ManaMessage_2eproto() {
  delete ManaMessage::default_instance_;
  delete ManaMessage_reflection_;
  delete ManaMessage_value_t::default_instance_;
  delete ManaMessage_value_t_reflection_;
  delete ManaMessage_subscription_t::default_instance_;
  delete ManaMessage_subscription_t_reflection_;
  delete ManaMessage_subscription_t_constraint_t::default_instance_;
  delete ManaMessage_subscription_t_constraint_t_reflection_;
  delete ManaMessage_notification_t::default_instance_;
  delete ManaMessage_notification_t_reflection_;
  delete ManaMessage_notification_t_attribute_t::default_instance_;
  delete ManaMessage_notification_t_attribute_t_reflection_;
  delete ManaMessage_key_value_pair::default_instance_;
  delete ManaMessage_key_value_pair_reflection_;
}

void protobuf_AddDesc_ManaMessage_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021ManaMessage.proto\022\004mana\"\206\n\n\013ManaMessag"
    "e\022.\n\004type\030\001 \002(\0162 .mana.ManaMessage.messa"
    "ge_type_t\022\016\n\006sender\030\002 \002(\t\022\016\n\006seq_no\030\003 \001("
    "\005\0226\n\014subscription\030\004 \001(\0132 .mana.ManaMessa"
    "ge.subscription_t\0226\n\014notification\030\005 \001(\0132"
    " .mana.ManaMessage.notification_t\022\026\n\016uns"
    "ubscription\030\006 \001(\t\022\017\n\007payload\030\007 \001(\014\0227\n\rke"
    "y_value_map\030\010 \003(\0132 .mana.ManaMessage.key"
    "_value_pair\032\210\001\n\007value_t\022*\n\004type\030\001 \002(\0162\034."
    "mana.ManaMessage.tag_type_t\022\024\n\014string_va"
    "lue\030\002 \001(\t\022\021\n\tint_value\030\003 \001(\005\022\024\n\014double_v"
    "alue\030\004 \001(\001\022\022\n\nbool_value\030\005 \001(\010\032\341\002\n\016subsc"
    "ription_t\022B\n\013constraints\030\001 \003(\0132-.mana.Ma"
    "naMessage.subscription_t.constraint_t\032\177\n"
    "\014constraint_t\022\014\n\004name\030\001 \002(\t\0227\n\002op\030\002 \002(\0162"
    "+.mana.ManaMessage.subscription_t.operat"
    "or_t\022(\n\005value\030\003 \002(\0132\031.mana.ManaMessage.v"
    "alue_t\"\211\001\n\noperator_t\022\t\n\005EQUAL\020\001\022\r\n\tLESS"
    "_THAN\020\002\022\020\n\014GREATER_THAN\020\003\022\n\n\006SUFFIX\020\004\022\n\n"
    "\006PREFIX\020\005\022\016\n\nSUB_STRING\020\006\022\007\n\003ANY\020\007\022\r\n\tNO"
    "T_EQUAL\020\010\022\017\n\013REGULAR_EXP\020\t\032\230\001\n\016notificat"
    "ion_t\022\?\n\tattribute\030\001 \003(\0132,.mana.ManaMess"
    "age.notification_t.attribute_t\032E\n\013attrib"
    "ute_t\022\014\n\004name\030\001 \002(\t\022(\n\005value\030\002 \002(\0132\031.man"
    "a.ManaMessage.value_t\032,\n\016key_value_pair\022"
    "\013\n\003key\030\001 \002(\t\022\r\n\005value\030\002 \002(\t\"\325\001\n\016message_"
    "type_t\022\021\n\rSTART_SESSION\020\001\022\025\n\021START_SESSI"
    "ON_ACK\020\002\022\031\n\025START_SESSION_ACK_ACK\020\003\022\025\n\021T"
    "ERMINATE_SESSION\020\004\022\031\n\025TERMINATE_SESSION_"
    "ACK\020\005\022\007\n\003ACK\020\006\022\r\n\tHEARTBEAT\020\007\022\007\n\003SUB\020e\022\007"
    "\n\003NOT\020f\022\n\n\005UNSUB\020\202\001\022\026\n\021ERR_NOT_SUPPORTED"
    "\020\311\001\"E\n\ntag_type_t\022\n\n\006STRING\020\001\022\007\n\003INT\020\002\022\n"
    "\n\006DOUBLE\020\003\022\010\n\004BOOL\020\004\022\014\n\010ANY_TYPE\020\005", 1314);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ManaMessage.proto", &protobuf_RegisterTypes);
  ManaMessage::default_instance_ = new ManaMessage();
  ManaMessage_value_t::default_instance_ = new ManaMessage_value_t();
  ManaMessage_subscription_t::default_instance_ = new ManaMessage_subscription_t();
  ManaMessage_subscription_t_constraint_t::default_instance_ = new ManaMessage_subscription_t_constraint_t();
  ManaMessage_notification_t::default_instance_ = new ManaMessage_notification_t();
  ManaMessage_notification_t_attribute_t::default_instance_ = new ManaMessage_notification_t_attribute_t();
  ManaMessage_key_value_pair::default_instance_ = new ManaMessage_key_value_pair();
  ManaMessage::default_instance_->InitAsDefaultInstance();
  ManaMessage_value_t::default_instance_->InitAsDefaultInstance();
  ManaMessage_subscription_t::default_instance_->InitAsDefaultInstance();
  ManaMessage_subscription_t_constraint_t::default_instance_->InitAsDefaultInstance();
  ManaMessage_notification_t::default_instance_->InitAsDefaultInstance();
  ManaMessage_notification_t_attribute_t::default_instance_->InitAsDefaultInstance();
  ManaMessage_key_value_pair::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ManaMessage_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ManaMessage_2eproto {
  StaticDescriptorInitializer_ManaMessage_2eproto() {
    protobuf_AddDesc_ManaMessage_2eproto();
  }
} static_descriptor_initializer_ManaMessage_2eproto_;


// ===================================================================

const ::google::protobuf::EnumDescriptor* ManaMessage_message_type_t_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ManaMessage_message_type_t_descriptor_;
}
bool ManaMessage_message_type_t_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 101:
    case 102:
    case 130:
    case 201:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const ManaMessage_message_type_t ManaMessage::START_SESSION;
const ManaMessage_message_type_t ManaMessage::START_SESSION_ACK;
const ManaMessage_message_type_t ManaMessage::START_SESSION_ACK_ACK;
const ManaMessage_message_type_t ManaMessage::TERMINATE_SESSION;
const ManaMessage_message_type_t ManaMessage::TERMINATE_SESSION_ACK;
const ManaMessage_message_type_t ManaMessage::ACK;
const ManaMessage_message_type_t ManaMessage::HEARTBEAT;
const ManaMessage_message_type_t ManaMessage::SUB;
const ManaMessage_message_type_t ManaMessage::NOT;
const ManaMessage_message_type_t ManaMessage::UNSUB;
const ManaMessage_message_type_t ManaMessage::ERR_NOT_SUPPORTED;
const ManaMessage_message_type_t ManaMessage::message_type_t_MIN;
const ManaMessage_message_type_t ManaMessage::message_type_t_MAX;
const int ManaMessage::message_type_t_ARRAYSIZE;
#endif  // _MSC_VER
const ::google::protobuf::EnumDescriptor* ManaMessage_tag_type_t_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ManaMessage_tag_type_t_descriptor_;
}
bool ManaMessage_tag_type_t_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const ManaMessage_tag_type_t ManaMessage::STRING;
const ManaMessage_tag_type_t ManaMessage::INT;
const ManaMessage_tag_type_t ManaMessage::DOUBLE;
const ManaMessage_tag_type_t ManaMessage::BOOL;
const ManaMessage_tag_type_t ManaMessage::ANY_TYPE;
const ManaMessage_tag_type_t ManaMessage::tag_type_t_MIN;
const ManaMessage_tag_type_t ManaMessage::tag_type_t_MAX;
const int ManaMessage::tag_type_t_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int ManaMessage_value_t::kTypeFieldNumber;
const int ManaMessage_value_t::kStringValueFieldNumber;
const int ManaMessage_value_t::kIntValueFieldNumber;
const int ManaMessage_value_t::kDoubleValueFieldNumber;
const int ManaMessage_value_t::kBoolValueFieldNumber;
#endif  // !_MSC_VER

ManaMessage_value_t::ManaMessage_value_t()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ManaMessage_value_t::InitAsDefaultInstance() {
}

ManaMessage_value_t::ManaMessage_value_t(const ManaMessage_value_t& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ManaMessage_value_t::SharedCtor() {
  _cached_size_ = 0;
  type_ = 1;
  string_value_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  int_value_ = 0;
  double_value_ = 0;
  bool_value_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ManaMessage_value_t::~ManaMessage_value_t() {
  SharedDtor();
}

void ManaMessage_value_t::SharedDtor() {
  if (string_value_ != &::google::protobuf::internal::kEmptyString) {
    delete string_value_;
  }
  if (this != default_instance_) {
  }
}

void ManaMessage_value_t::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ManaMessage_value_t::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ManaMessage_value_t_descriptor_;
}

const ManaMessage_value_t& ManaMessage_value_t::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ManaMessage_2eproto();  return *default_instance_;
}

ManaMessage_value_t* ManaMessage_value_t::default_instance_ = NULL;

ManaMessage_value_t* ManaMessage_value_t::New() const {
  return new ManaMessage_value_t;
}

void ManaMessage_value_t::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 1;
    if (has_string_value()) {
      if (string_value_ != &::google::protobuf::internal::kEmptyString) {
        string_value_->clear();
      }
    }
    int_value_ = 0;
    double_value_ = 0;
    bool_value_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ManaMessage_value_t::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .mana.ManaMessage.tag_type_t type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::mana::ManaMessage_tag_type_t_IsValid(value)) {
            set_type(static_cast< ::mana::ManaMessage_tag_type_t >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_string_value;
        break;
      }
      
      // optional string string_value = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_string_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_string_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->string_value().data(), this->string_value().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_int_value;
        break;
      }
      
      // optional int32 int_value = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_int_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &int_value_)));
          set_has_int_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(33)) goto parse_double_value;
        break;
      }
      
      // optional double double_value = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_double_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &double_value_)));
          set_has_double_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_bool_value;
        break;
      }
      
      // optional bool bool_value = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_bool_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bool_value_)));
          set_has_bool_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ManaMessage_value_t::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .mana.ManaMessage.tag_type_t type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }
  
  // optional string string_value = 2;
  if (has_string_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->string_value().data(), this->string_value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->string_value(), output);
  }
  
  // optional int32 int_value = 3;
  if (has_int_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->int_value(), output);
  }
  
  // optional double double_value = 4;
  if (has_double_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->double_value(), output);
  }
  
  // optional bool bool_value = 5;
  if (has_bool_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->bool_value(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ManaMessage_value_t::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .mana.ManaMessage.tag_type_t type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }
  
  // optional string string_value = 2;
  if (has_string_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->string_value().data(), this->string_value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->string_value(), target);
  }
  
  // optional int32 int_value = 3;
  if (has_int_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->int_value(), target);
  }
  
  // optional double double_value = 4;
  if (has_double_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->double_value(), target);
  }
  
  // optional bool bool_value = 5;
  if (has_bool_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->bool_value(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ManaMessage_value_t::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .mana.ManaMessage.tag_type_t type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }
    
    // optional string string_value = 2;
    if (has_string_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->string_value());
    }
    
    // optional int32 int_value = 3;
    if (has_int_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->int_value());
    }
    
    // optional double double_value = 4;
    if (has_double_value()) {
      total_size += 1 + 8;
    }
    
    // optional bool bool_value = 5;
    if (has_bool_value()) {
      total_size += 1 + 1;
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ManaMessage_value_t::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ManaMessage_value_t* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ManaMessage_value_t*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ManaMessage_value_t::MergeFrom(const ManaMessage_value_t& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_string_value()) {
      set_string_value(from.string_value());
    }
    if (from.has_int_value()) {
      set_int_value(from.int_value());
    }
    if (from.has_double_value()) {
      set_double_value(from.double_value());
    }
    if (from.has_bool_value()) {
      set_bool_value(from.bool_value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ManaMessage_value_t::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ManaMessage_value_t::CopyFrom(const ManaMessage_value_t& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ManaMessage_value_t::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  return true;
}

void ManaMessage_value_t::Swap(ManaMessage_value_t* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(string_value_, other->string_value_);
    std::swap(int_value_, other->int_value_);
    std::swap(double_value_, other->double_value_);
    std::swap(bool_value_, other->bool_value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ManaMessage_value_t::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ManaMessage_value_t_descriptor_;
  metadata.reflection = ManaMessage_value_t_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

const ::google::protobuf::EnumDescriptor* ManaMessage_subscription_t_operator_t_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ManaMessage_subscription_t_operator_t_descriptor_;
}
bool ManaMessage_subscription_t_operator_t_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const ManaMessage_subscription_t_operator_t ManaMessage_subscription_t::EQUAL;
const ManaMessage_subscription_t_operator_t ManaMessage_subscription_t::LESS_THAN;
const ManaMessage_subscription_t_operator_t ManaMessage_subscription_t::GREATER_THAN;
const ManaMessage_subscription_t_operator_t ManaMessage_subscription_t::SUFFIX;
const ManaMessage_subscription_t_operator_t ManaMessage_subscription_t::PREFIX;
const ManaMessage_subscription_t_operator_t ManaMessage_subscription_t::SUB_STRING;
const ManaMessage_subscription_t_operator_t ManaMessage_subscription_t::ANY;
const ManaMessage_subscription_t_operator_t ManaMessage_subscription_t::NOT_EQUAL;
const ManaMessage_subscription_t_operator_t ManaMessage_subscription_t::REGULAR_EXP;
const ManaMessage_subscription_t_operator_t ManaMessage_subscription_t::operator_t_MIN;
const ManaMessage_subscription_t_operator_t ManaMessage_subscription_t::operator_t_MAX;
const int ManaMessage_subscription_t::operator_t_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int ManaMessage_subscription_t_constraint_t::kNameFieldNumber;
const int ManaMessage_subscription_t_constraint_t::kOpFieldNumber;
const int ManaMessage_subscription_t_constraint_t::kValueFieldNumber;
#endif  // !_MSC_VER

ManaMessage_subscription_t_constraint_t::ManaMessage_subscription_t_constraint_t()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ManaMessage_subscription_t_constraint_t::InitAsDefaultInstance() {
  value_ = const_cast< ::mana::ManaMessage_value_t*>(&::mana::ManaMessage_value_t::default_instance());
}

ManaMessage_subscription_t_constraint_t::ManaMessage_subscription_t_constraint_t(const ManaMessage_subscription_t_constraint_t& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ManaMessage_subscription_t_constraint_t::SharedCtor() {
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  op_ = 1;
  value_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ManaMessage_subscription_t_constraint_t::~ManaMessage_subscription_t_constraint_t() {
  SharedDtor();
}

void ManaMessage_subscription_t_constraint_t::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (this != default_instance_) {
    delete value_;
  }
}

void ManaMessage_subscription_t_constraint_t::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ManaMessage_subscription_t_constraint_t::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ManaMessage_subscription_t_constraint_t_descriptor_;
}

const ManaMessage_subscription_t_constraint_t& ManaMessage_subscription_t_constraint_t::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ManaMessage_2eproto();  return *default_instance_;
}

ManaMessage_subscription_t_constraint_t* ManaMessage_subscription_t_constraint_t::default_instance_ = NULL;

ManaMessage_subscription_t_constraint_t* ManaMessage_subscription_t_constraint_t::New() const {
  return new ManaMessage_subscription_t_constraint_t;
}

void ManaMessage_subscription_t_constraint_t::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
    op_ = 1;
    if (has_value()) {
      if (value_ != NULL) value_->::mana::ManaMessage_value_t::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ManaMessage_subscription_t_constraint_t::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_op;
        break;
      }
      
      // required .mana.ManaMessage.subscription_t.operator_t op = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_op:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::mana::ManaMessage_subscription_t_operator_t_IsValid(value)) {
            set_op(static_cast< ::mana::ManaMessage_subscription_t_operator_t >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_value;
        break;
      }
      
      // required .mana.ManaMessage.value_t value = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_value()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ManaMessage_subscription_t_constraint_t::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->name(), output);
  }
  
  // required .mana.ManaMessage.subscription_t.operator_t op = 2;
  if (has_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->op(), output);
  }
  
  // required .mana.ManaMessage.value_t value = 3;
  if (has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->value(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ManaMessage_subscription_t_constraint_t::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }
  
  // required .mana.ManaMessage.subscription_t.operator_t op = 2;
  if (has_op()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->op(), target);
  }
  
  // required .mana.ManaMessage.value_t value = 3;
  if (has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->value(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ManaMessage_subscription_t_constraint_t::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }
    
    // required .mana.ManaMessage.subscription_t.operator_t op = 2;
    if (has_op()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->op());
    }
    
    // required .mana.ManaMessage.value_t value = 3;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->value());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ManaMessage_subscription_t_constraint_t::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ManaMessage_subscription_t_constraint_t* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ManaMessage_subscription_t_constraint_t*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ManaMessage_subscription_t_constraint_t::MergeFrom(const ManaMessage_subscription_t_constraint_t& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_op()) {
      set_op(from.op());
    }
    if (from.has_value()) {
      mutable_value()->::mana::ManaMessage_value_t::MergeFrom(from.value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ManaMessage_subscription_t_constraint_t::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ManaMessage_subscription_t_constraint_t::CopyFrom(const ManaMessage_subscription_t_constraint_t& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ManaMessage_subscription_t_constraint_t::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  
  if (has_value()) {
    if (!this->value().IsInitialized()) return false;
  }
  return true;
}

void ManaMessage_subscription_t_constraint_t::Swap(ManaMessage_subscription_t_constraint_t* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(op_, other->op_);
    std::swap(value_, other->value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ManaMessage_subscription_t_constraint_t::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ManaMessage_subscription_t_constraint_t_descriptor_;
  metadata.reflection = ManaMessage_subscription_t_constraint_t_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int ManaMessage_subscription_t::kConstraintsFieldNumber;
#endif  // !_MSC_VER

ManaMessage_subscription_t::ManaMessage_subscription_t()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ManaMessage_subscription_t::InitAsDefaultInstance() {
}

ManaMessage_subscription_t::ManaMessage_subscription_t(const ManaMessage_subscription_t& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ManaMessage_subscription_t::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ManaMessage_subscription_t::~ManaMessage_subscription_t() {
  SharedDtor();
}

void ManaMessage_subscription_t::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ManaMessage_subscription_t::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ManaMessage_subscription_t::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ManaMessage_subscription_t_descriptor_;
}

const ManaMessage_subscription_t& ManaMessage_subscription_t::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ManaMessage_2eproto();  return *default_instance_;
}

ManaMessage_subscription_t* ManaMessage_subscription_t::default_instance_ = NULL;

ManaMessage_subscription_t* ManaMessage_subscription_t::New() const {
  return new ManaMessage_subscription_t;
}

void ManaMessage_subscription_t::Clear() {
  constraints_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ManaMessage_subscription_t::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .mana.ManaMessage.subscription_t.constraint_t constraints = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_constraints:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_constraints()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_constraints;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ManaMessage_subscription_t::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .mana.ManaMessage.subscription_t.constraint_t constraints = 1;
  for (int i = 0; i < this->constraints_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->constraints(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ManaMessage_subscription_t::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .mana.ManaMessage.subscription_t.constraint_t constraints = 1;
  for (int i = 0; i < this->constraints_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->constraints(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ManaMessage_subscription_t::ByteSize() const {
  int total_size = 0;
  
  // repeated .mana.ManaMessage.subscription_t.constraint_t constraints = 1;
  total_size += 1 * this->constraints_size();
  for (int i = 0; i < this->constraints_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->constraints(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ManaMessage_subscription_t::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ManaMessage_subscription_t* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ManaMessage_subscription_t*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ManaMessage_subscription_t::MergeFrom(const ManaMessage_subscription_t& from) {
  GOOGLE_CHECK_NE(&from, this);
  constraints_.MergeFrom(from.constraints_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ManaMessage_subscription_t::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ManaMessage_subscription_t::CopyFrom(const ManaMessage_subscription_t& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ManaMessage_subscription_t::IsInitialized() const {
  
  for (int i = 0; i < constraints_size(); i++) {
    if (!this->constraints(i).IsInitialized()) return false;
  }
  return true;
}

void ManaMessage_subscription_t::Swap(ManaMessage_subscription_t* other) {
  if (other != this) {
    constraints_.Swap(&other->constraints_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ManaMessage_subscription_t::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ManaMessage_subscription_t_descriptor_;
  metadata.reflection = ManaMessage_subscription_t_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int ManaMessage_notification_t_attribute_t::kNameFieldNumber;
const int ManaMessage_notification_t_attribute_t::kValueFieldNumber;
#endif  // !_MSC_VER

ManaMessage_notification_t_attribute_t::ManaMessage_notification_t_attribute_t()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ManaMessage_notification_t_attribute_t::InitAsDefaultInstance() {
  value_ = const_cast< ::mana::ManaMessage_value_t*>(&::mana::ManaMessage_value_t::default_instance());
}

ManaMessage_notification_t_attribute_t::ManaMessage_notification_t_attribute_t(const ManaMessage_notification_t_attribute_t& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ManaMessage_notification_t_attribute_t::SharedCtor() {
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  value_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ManaMessage_notification_t_attribute_t::~ManaMessage_notification_t_attribute_t() {
  SharedDtor();
}

void ManaMessage_notification_t_attribute_t::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (this != default_instance_) {
    delete value_;
  }
}

void ManaMessage_notification_t_attribute_t::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ManaMessage_notification_t_attribute_t::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ManaMessage_notification_t_attribute_t_descriptor_;
}

const ManaMessage_notification_t_attribute_t& ManaMessage_notification_t_attribute_t::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ManaMessage_2eproto();  return *default_instance_;
}

ManaMessage_notification_t_attribute_t* ManaMessage_notification_t_attribute_t::default_instance_ = NULL;

ManaMessage_notification_t_attribute_t* ManaMessage_notification_t_attribute_t::New() const {
  return new ManaMessage_notification_t_attribute_t;
}

void ManaMessage_notification_t_attribute_t::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
    if (has_value()) {
      if (value_ != NULL) value_->::mana::ManaMessage_value_t::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ManaMessage_notification_t_attribute_t::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_value;
        break;
      }
      
      // required .mana.ManaMessage.value_t value = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_value()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ManaMessage_notification_t_attribute_t::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->name(), output);
  }
  
  // required .mana.ManaMessage.value_t value = 2;
  if (has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->value(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ManaMessage_notification_t_attribute_t::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }
  
  // required .mana.ManaMessage.value_t value = 2;
  if (has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->value(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ManaMessage_notification_t_attribute_t::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }
    
    // required .mana.ManaMessage.value_t value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->value());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ManaMessage_notification_t_attribute_t::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ManaMessage_notification_t_attribute_t* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ManaMessage_notification_t_attribute_t*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ManaMessage_notification_t_attribute_t::MergeFrom(const ManaMessage_notification_t_attribute_t& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_value()) {
      mutable_value()->::mana::ManaMessage_value_t::MergeFrom(from.value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ManaMessage_notification_t_attribute_t::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ManaMessage_notification_t_attribute_t::CopyFrom(const ManaMessage_notification_t_attribute_t& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ManaMessage_notification_t_attribute_t::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  if (has_value()) {
    if (!this->value().IsInitialized()) return false;
  }
  return true;
}

void ManaMessage_notification_t_attribute_t::Swap(ManaMessage_notification_t_attribute_t* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(value_, other->value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ManaMessage_notification_t_attribute_t::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ManaMessage_notification_t_attribute_t_descriptor_;
  metadata.reflection = ManaMessage_notification_t_attribute_t_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int ManaMessage_notification_t::kAttributeFieldNumber;
#endif  // !_MSC_VER

ManaMessage_notification_t::ManaMessage_notification_t()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ManaMessage_notification_t::InitAsDefaultInstance() {
}

ManaMessage_notification_t::ManaMessage_notification_t(const ManaMessage_notification_t& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ManaMessage_notification_t::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ManaMessage_notification_t::~ManaMessage_notification_t() {
  SharedDtor();
}

void ManaMessage_notification_t::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ManaMessage_notification_t::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ManaMessage_notification_t::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ManaMessage_notification_t_descriptor_;
}

const ManaMessage_notification_t& ManaMessage_notification_t::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ManaMessage_2eproto();  return *default_instance_;
}

ManaMessage_notification_t* ManaMessage_notification_t::default_instance_ = NULL;

ManaMessage_notification_t* ManaMessage_notification_t::New() const {
  return new ManaMessage_notification_t;
}

void ManaMessage_notification_t::Clear() {
  attribute_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ManaMessage_notification_t::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .mana.ManaMessage.notification_t.attribute_t attribute = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_attribute:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_attribute()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_attribute;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ManaMessage_notification_t::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .mana.ManaMessage.notification_t.attribute_t attribute = 1;
  for (int i = 0; i < this->attribute_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->attribute(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ManaMessage_notification_t::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .mana.ManaMessage.notification_t.attribute_t attribute = 1;
  for (int i = 0; i < this->attribute_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->attribute(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ManaMessage_notification_t::ByteSize() const {
  int total_size = 0;
  
  // repeated .mana.ManaMessage.notification_t.attribute_t attribute = 1;
  total_size += 1 * this->attribute_size();
  for (int i = 0; i < this->attribute_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->attribute(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ManaMessage_notification_t::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ManaMessage_notification_t* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ManaMessage_notification_t*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ManaMessage_notification_t::MergeFrom(const ManaMessage_notification_t& from) {
  GOOGLE_CHECK_NE(&from, this);
  attribute_.MergeFrom(from.attribute_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ManaMessage_notification_t::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ManaMessage_notification_t::CopyFrom(const ManaMessage_notification_t& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ManaMessage_notification_t::IsInitialized() const {
  
  for (int i = 0; i < attribute_size(); i++) {
    if (!this->attribute(i).IsInitialized()) return false;
  }
  return true;
}

void ManaMessage_notification_t::Swap(ManaMessage_notification_t* other) {
  if (other != this) {
    attribute_.Swap(&other->attribute_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ManaMessage_notification_t::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ManaMessage_notification_t_descriptor_;
  metadata.reflection = ManaMessage_notification_t_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int ManaMessage_key_value_pair::kKeyFieldNumber;
const int ManaMessage_key_value_pair::kValueFieldNumber;
#endif  // !_MSC_VER

ManaMessage_key_value_pair::ManaMessage_key_value_pair()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ManaMessage_key_value_pair::InitAsDefaultInstance() {
}

ManaMessage_key_value_pair::ManaMessage_key_value_pair(const ManaMessage_key_value_pair& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ManaMessage_key_value_pair::SharedCtor() {
  _cached_size_ = 0;
  key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  value_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ManaMessage_key_value_pair::~ManaMessage_key_value_pair() {
  SharedDtor();
}

void ManaMessage_key_value_pair::SharedDtor() {
  if (key_ != &::google::protobuf::internal::kEmptyString) {
    delete key_;
  }
  if (value_ != &::google::protobuf::internal::kEmptyString) {
    delete value_;
  }
  if (this != default_instance_) {
  }
}

void ManaMessage_key_value_pair::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ManaMessage_key_value_pair::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ManaMessage_key_value_pair_descriptor_;
}

const ManaMessage_key_value_pair& ManaMessage_key_value_pair::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ManaMessage_2eproto();  return *default_instance_;
}

ManaMessage_key_value_pair* ManaMessage_key_value_pair::default_instance_ = NULL;

ManaMessage_key_value_pair* ManaMessage_key_value_pair::New() const {
  return new ManaMessage_key_value_pair;
}

void ManaMessage_key_value_pair::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_key()) {
      if (key_ != &::google::protobuf::internal::kEmptyString) {
        key_->clear();
      }
    }
    if (has_value()) {
      if (value_ != &::google::protobuf::internal::kEmptyString) {
        value_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ManaMessage_key_value_pair::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string key = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->key().data(), this->key().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_value;
        break;
      }
      
      // required string value = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->value().data(), this->value().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ManaMessage_key_value_pair::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string key = 1;
  if (has_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->key(), output);
  }
  
  // required string value = 2;
  if (has_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->value(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ManaMessage_key_value_pair::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string key = 1;
  if (has_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }
  
  // required string value = 2;
  if (has_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ManaMessage_key_value_pair::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string key = 1;
    if (has_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->key());
    }
    
    // required string value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->value());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ManaMessage_key_value_pair::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ManaMessage_key_value_pair* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ManaMessage_key_value_pair*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ManaMessage_key_value_pair::MergeFrom(const ManaMessage_key_value_pair& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_key()) {
      set_key(from.key());
    }
    if (from.has_value()) {
      set_value(from.value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ManaMessage_key_value_pair::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ManaMessage_key_value_pair::CopyFrom(const ManaMessage_key_value_pair& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ManaMessage_key_value_pair::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  return true;
}

void ManaMessage_key_value_pair::Swap(ManaMessage_key_value_pair* other) {
  if (other != this) {
    std::swap(key_, other->key_);
    std::swap(value_, other->value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ManaMessage_key_value_pair::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ManaMessage_key_value_pair_descriptor_;
  metadata.reflection = ManaMessage_key_value_pair_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int ManaMessage::kTypeFieldNumber;
const int ManaMessage::kSenderFieldNumber;
const int ManaMessage::kSeqNoFieldNumber;
const int ManaMessage::kSubscriptionFieldNumber;
const int ManaMessage::kNotificationFieldNumber;
const int ManaMessage::kUnsubscriptionFieldNumber;
const int ManaMessage::kPayloadFieldNumber;
const int ManaMessage::kKeyValueMapFieldNumber;
#endif  // !_MSC_VER

ManaMessage::ManaMessage()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ManaMessage::InitAsDefaultInstance() {
  subscription_ = const_cast< ::mana::ManaMessage_subscription_t*>(&::mana::ManaMessage_subscription_t::default_instance());
  notification_ = const_cast< ::mana::ManaMessage_notification_t*>(&::mana::ManaMessage_notification_t::default_instance());
}

ManaMessage::ManaMessage(const ManaMessage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ManaMessage::SharedCtor() {
  _cached_size_ = 0;
  type_ = 1;
  sender_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  seq_no_ = 0;
  subscription_ = NULL;
  notification_ = NULL;
  unsubscription_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  payload_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ManaMessage::~ManaMessage() {
  SharedDtor();
}

void ManaMessage::SharedDtor() {
  if (sender_ != &::google::protobuf::internal::kEmptyString) {
    delete sender_;
  }
  if (unsubscription_ != &::google::protobuf::internal::kEmptyString) {
    delete unsubscription_;
  }
  if (payload_ != &::google::protobuf::internal::kEmptyString) {
    delete payload_;
  }
  if (this != default_instance_) {
    delete subscription_;
    delete notification_;
  }
}

void ManaMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ManaMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ManaMessage_descriptor_;
}

const ManaMessage& ManaMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ManaMessage_2eproto();  return *default_instance_;
}

ManaMessage* ManaMessage::default_instance_ = NULL;

ManaMessage* ManaMessage::New() const {
  return new ManaMessage;
}

void ManaMessage::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 1;
    if (has_sender()) {
      if (sender_ != &::google::protobuf::internal::kEmptyString) {
        sender_->clear();
      }
    }
    seq_no_ = 0;
    if (has_subscription()) {
      if (subscription_ != NULL) subscription_->::mana::ManaMessage_subscription_t::Clear();
    }
    if (has_notification()) {
      if (notification_ != NULL) notification_->::mana::ManaMessage_notification_t::Clear();
    }
    if (has_unsubscription()) {
      if (unsubscription_ != &::google::protobuf::internal::kEmptyString) {
        unsubscription_->clear();
      }
    }
    if (has_payload()) {
      if (payload_ != &::google::protobuf::internal::kEmptyString) {
        payload_->clear();
      }
    }
  }
  key_value_map_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ManaMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .mana.ManaMessage.message_type_t type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::mana::ManaMessage_message_type_t_IsValid(value)) {
            set_type(static_cast< ::mana::ManaMessage_message_type_t >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_sender;
        break;
      }
      
      // required string sender = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_sender:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sender()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->sender().data(), this->sender().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_seq_no;
        break;
      }
      
      // optional int32 seq_no = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_seq_no:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &seq_no_)));
          set_has_seq_no();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_subscription;
        break;
      }
      
      // optional .mana.ManaMessage.subscription_t subscription = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_subscription:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_subscription()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_notification;
        break;
      }
      
      // optional .mana.ManaMessage.notification_t notification = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_notification:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_notification()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_unsubscription;
        break;
      }
      
      // optional string unsubscription = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_unsubscription:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_unsubscription()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->unsubscription().data(), this->unsubscription().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_payload;
        break;
      }
      
      // optional bytes payload = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_payload:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_payload()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_key_value_map;
        break;
      }
      
      // repeated .mana.ManaMessage.key_value_pair key_value_map = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_key_value_map:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_key_value_map()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_key_value_map;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ManaMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .mana.ManaMessage.message_type_t type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }
  
  // required string sender = 2;
  if (has_sender()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sender().data(), this->sender().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->sender(), output);
  }
  
  // optional int32 seq_no = 3;
  if (has_seq_no()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->seq_no(), output);
  }
  
  // optional .mana.ManaMessage.subscription_t subscription = 4;
  if (has_subscription()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->subscription(), output);
  }
  
  // optional .mana.ManaMessage.notification_t notification = 5;
  if (has_notification()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->notification(), output);
  }
  
  // optional string unsubscription = 6;
  if (has_unsubscription()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->unsubscription().data(), this->unsubscription().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->unsubscription(), output);
  }
  
  // optional bytes payload = 7;
  if (has_payload()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      7, this->payload(), output);
  }
  
  // repeated .mana.ManaMessage.key_value_pair key_value_map = 8;
  for (int i = 0; i < this->key_value_map_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->key_value_map(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ManaMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .mana.ManaMessage.message_type_t type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }
  
  // required string sender = 2;
  if (has_sender()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sender().data(), this->sender().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->sender(), target);
  }
  
  // optional int32 seq_no = 3;
  if (has_seq_no()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->seq_no(), target);
  }
  
  // optional .mana.ManaMessage.subscription_t subscription = 4;
  if (has_subscription()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->subscription(), target);
  }
  
  // optional .mana.ManaMessage.notification_t notification = 5;
  if (has_notification()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->notification(), target);
  }
  
  // optional string unsubscription = 6;
  if (has_unsubscription()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->unsubscription().data(), this->unsubscription().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->unsubscription(), target);
  }
  
  // optional bytes payload = 7;
  if (has_payload()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        7, this->payload(), target);
  }
  
  // repeated .mana.ManaMessage.key_value_pair key_value_map = 8;
  for (int i = 0; i < this->key_value_map_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->key_value_map(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ManaMessage::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .mana.ManaMessage.message_type_t type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }
    
    // required string sender = 2;
    if (has_sender()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sender());
    }
    
    // optional int32 seq_no = 3;
    if (has_seq_no()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->seq_no());
    }
    
    // optional .mana.ManaMessage.subscription_t subscription = 4;
    if (has_subscription()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->subscription());
    }
    
    // optional .mana.ManaMessage.notification_t notification = 5;
    if (has_notification()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->notification());
    }
    
    // optional string unsubscription = 6;
    if (has_unsubscription()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->unsubscription());
    }
    
    // optional bytes payload = 7;
    if (has_payload()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->payload());
    }
    
  }
  // repeated .mana.ManaMessage.key_value_pair key_value_map = 8;
  total_size += 1 * this->key_value_map_size();
  for (int i = 0; i < this->key_value_map_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->key_value_map(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ManaMessage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ManaMessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ManaMessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ManaMessage::MergeFrom(const ManaMessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  key_value_map_.MergeFrom(from.key_value_map_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_sender()) {
      set_sender(from.sender());
    }
    if (from.has_seq_no()) {
      set_seq_no(from.seq_no());
    }
    if (from.has_subscription()) {
      mutable_subscription()->::mana::ManaMessage_subscription_t::MergeFrom(from.subscription());
    }
    if (from.has_notification()) {
      mutable_notification()->::mana::ManaMessage_notification_t::MergeFrom(from.notification());
    }
    if (from.has_unsubscription()) {
      set_unsubscription(from.unsubscription());
    }
    if (from.has_payload()) {
      set_payload(from.payload());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ManaMessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ManaMessage::CopyFrom(const ManaMessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ManaMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  if (has_subscription()) {
    if (!this->subscription().IsInitialized()) return false;
  }
  if (has_notification()) {
    if (!this->notification().IsInitialized()) return false;
  }
  for (int i = 0; i < key_value_map_size(); i++) {
    if (!this->key_value_map(i).IsInitialized()) return false;
  }
  return true;
}

void ManaMessage::Swap(ManaMessage* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(sender_, other->sender_);
    std::swap(seq_no_, other->seq_no_);
    std::swap(subscription_, other->subscription_);
    std::swap(notification_, other->notification_);
    std::swap(unsubscription_, other->unsubscription_);
    std::swap(payload_, other->payload_);
    key_value_map_.Swap(&other->key_value_map_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ManaMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ManaMessage_descriptor_;
  metadata.reflection = ManaMessage_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace mana

// @@protoc_insertion_point(global_scope)
